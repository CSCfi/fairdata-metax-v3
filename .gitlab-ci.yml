workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(master|release])$/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^(master|release)$/

stages:
  - test

unittests:
  stage: test
  tags:
    - docker
  image:
    name: python:3.8
  services:
    - postgres:12
  variables:
    POSTGRES_USER: metax_user
    POSTGRES_PASSWORD: password
    POSTGRES_PASS: password
    POSTGRES_DB: metax_db
    POSTGRES_DATABASE_NAME: metax_db
    POSTGRES_PORT: 5432
    POSTGRES_HOST: postgres
  script:
    - pip install -r dev-requirements.txt
    - python manage.py migrate
    - pytest --cov-report xml --cov-report term:skip-covered
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml

sonarqube-check:
  tags:
    - docker
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  needs:
    - job: unittests
      artifacts: true
  only:
    - merge_requests
    - master
    - test
    - staging
