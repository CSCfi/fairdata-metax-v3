[tool.poetry]
name = "fairdata-metax-service"
version = "0.1.0"
description = ""
license = "GPL-2.0-only"
authors = [
    "Atro Himanen <atro.himanen@csc.fi>",
    "Ismo Torvinen <ismo.torvinen@bearit.fi>",
    "Jori Niemi <jori.niemi@bearit.fi>",
    "Pekka Tiainen <aptiaine@csc.fi>",
    "Sini Saarinen <sini.saarinen@csc.fi>",
    "Toni Nurmi <tonurmi@csc.fi>"
]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.8.10"
Django = "<5.0"
djangorestframework = "^3.14.0"
django-model-utils = "^4.3.1"
django-split-settings = "^1.2.0"
python-dotenv = "^0.19.2"
django-extensions = "^3.2.3"
drf-yasg = "^1.21.7"
mkdocs-material = "^8.5.11"
mkdocs-literate-nav = "^0.4.1"
mkdocs-section-index = "^0.3.8"
rdflib = "^6.3.2"
django-filter = "^22.1"
factory-boy = "^3.3.0"
inflection = "^0.5.1"
django-simple-history = "^3.4.0"
httpx = "^0.23.3"
deepdiff = "^6.6.1"
gunicorn = "^20.1.0"
environs = "^9.5.0"
django-watchman = "^1.3.0"
drf-writable-nested = "^0.7.0"
drf-nested-routers = "^0.93.4"
python-dateutil = "^2.8.2"
django-polymorphic = "^3.1.0"
django-cors-headers = "^4.3.0"
django-rest-knox = "^4.2.0"
pyjwt = "^2.8.0"
pymemcache = "^4.0.0"
django-cachalot = "^2.6.1"
django-watson = "^1.6.3"
coreapi = "^2.3.3"
mkdocstrings = {extras = ["python"], version = "^0.22.0"}
pyyaml = "^6.0.1"
drf-access-policy = "^1.5.0"
django-hijack = "^3.4.1"
shapely = "^2.0.2"
django-json-widget = "^1.1.1"
datacite = "^1.1.3"
elementpath = "^4.1.5"
lxml = "^5.1.0"
requests-mock = "^1.11.0"
psycopg = {extras = ["binary"], version = "^3.1.18"}

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
django-silk = "^5.0.4"
pytest-xdist = "^3.3.1"
pytest-cov = "^4.1.0"
django-debug-toolbar = "^4.2.0"
pytest-django = "^4.5.2"
tox = "^4.11.3"
werkzeug = "^2.3.7"
pytest-mock = "^3.12.0"
requests-mock = "^1.11.0"
pymdown-extensions = "^9.11"
pytest = "<7.3"
pytest-bdd = "^6.1.1"
jsonmodels = "^2.6.0"
pyopenssl = "^23.2.0"
black = "^23.10.0"
bpython = "^0.24"
django-test-migrations = "^1.3.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
force-exclude = "migrations/"
line-length = 99

[tool.isort]
profile = "black"
src_paths = ["src", "test"]
known_third_party = ["django", "djangorestframework"]
line_length = 99
extend_skip_glob = ["*/migrations/*"]
combine_as_imports = true
group_by_package = true

[tool.ruff]
line-length = 99

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "N"]

[tool.ruff.lint.pydocstyle]
convention = "google"
