# Generated by Django 3.2.21 on 2023-09-19 09:29

import apps.core.models.concepts
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('actors', '0003_auto_20230807_1334'),
        ('refdata', '0009_alter_location_as_wkt'),
        ('core', '0018_auto_20230824_1855'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchInfra',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.researchinfra'),
        ),
        migrations.AlterField(
            model_name='catalogrecord',
            name='preservation_state',
            field=models.IntegerField(choices=[(-1, 'None'), (0, 'Initialized'), (10, 'Generating Technical Metadata'), (20, 'Technical Metadata Generated'), (30, 'Technical Metadata Generated Failed'), (40, 'Invalid Metadata'), (50, 'Metadata Validation Failed'), (60, 'Validated Metadata Updated'), (65, 'Validating Metadata'), (70, 'Rejected By User'), (75, 'Metadata Confirmed'), (80, 'Accepted To Pas'), (90, 'In Packaging Service'), (100, 'Packaging Failed'), (110, 'Sip In Ingestion'), (120, 'In Pas'), (130, 'Rejected From Pas'), (140, 'In Dissemination')], default=-1, help_text='Record state in PAS.'),
        ),
        migrations.AlterField(
            model_name='historicalcatalogrecord',
            name='preservation_state',
            field=models.IntegerField(choices=[(-1, 'None'), (0, 'Initialized'), (10, 'Generating Technical Metadata'), (20, 'Technical Metadata Generated'), (30, 'Technical Metadata Generated Failed'), (40, 'Invalid Metadata'), (50, 'Metadata Validation Failed'), (60, 'Validated Metadata Updated'), (65, 'Validating Metadata'), (70, 'Rejected By User'), (75, 'Metadata Confirmed'), (80, 'Accepted To Pas'), (90, 'In Packaging Service'), (100, 'Packaging Failed'), (110, 'Sip In Ingestion'), (120, 'In Pas'), (130, 'Rejected From Pas'), (140, 'In Dissemination')], default=-1, help_text='Record state in PAS.'),
        ),
        migrations.AlterField(
            model_name='historicaldataset',
            name='preservation_state',
            field=models.IntegerField(choices=[(-1, 'None'), (0, 'Initialized'), (10, 'Generating Technical Metadata'), (20, 'Technical Metadata Generated'), (30, 'Technical Metadata Generated Failed'), (40, 'Invalid Metadata'), (50, 'Metadata Validation Failed'), (60, 'Validated Metadata Updated'), (65, 'Validating Metadata'), (70, 'Rejected By User'), (75, 'Metadata Confirmed'), (80, 'Accepted To Pas'), (90, 'In Packaging Service'), (100, 'Packaging Failed'), (110, 'Sip In Ingestion'), (120, 'In Pas'), (130, 'Rejected From Pas'), (140, 'In Dissemination')], default=-1, help_text='Record state in PAS.'),
        ),
        migrations.CreateModel(
            name='DatasetActor',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='actors.actor')),
                ('roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('creator', 'Creator'), ('contributor', 'Contributor'), ('publisher', 'Publisher'), ('curator', 'Curator'), ('rights_holder', 'Rights holder'), ('provenance', 'Provenance')], default='creator', max_length=30), null=True, size=None)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actors', to='core.dataset')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('actors.actor',),
        ),
        migrations.AddField(
            model_name='dataset',
            name='infrastructure',
            field=models.ManyToManyField(blank=True, related_name='datasets', to='core.ResearchInfra'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='is_associated_with',
            field=models.ManyToManyField(related_name='provenance', to='core.DatasetActor'),
        ),
    ]
