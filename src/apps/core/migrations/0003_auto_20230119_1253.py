# Generated by Django 3.2.16 on 2023-01-19 10:53

import apps.core.models.concepts
from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('actors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('refdata', '0002_auto_20221219_0909'),
        ('core', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRightsRestrictionGrounds',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(blank=True, help_text='example: {"en":"title", "fi":"otsikko"}', null=True)),
                ('representation', models.URLField(blank=True, null=True)),
                ('pref_label', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('description', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('in_scheme', models.URLField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Checksum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('date_checked', models.DateTimeField()),
                ('hash_value', models.CharField(max_length=512)),
                ('algorithm', models.CharField(max_length=32)),
                ('system_creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_checksums', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetActor',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='actors.actor')),
                ('role', models.CharField(choices=[('creator', 'Creator'), ('contributor', 'Contributor'), ('publisher', 'Publisher'), ('curator', 'Curator'), ('rights_holder', 'Rights holder'), ('provenance', 'Provenance')], default='creator', max_length=100)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('actors.actor',),
        ),
        migrations.CreateModel(
            name='DatasetProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('project_identifier', models.CharField(blank=True, max_length=512, null=True)),
                ('funder_identifier', models.CharField(blank=True, max_length=512, null=True)),
                ('name', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegacyDataset',
            fields=[
                ('dataset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.dataset')),
                ('dataset_json', models.JSONField()),
                ('contract_json', models.JSONField(blank=True, null=True)),
                ('files_json', models.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.dataset',),
        ),
        migrations.CreateModel(
            name='MetadataProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('organization', models.CharField(max_length=512)),
                ('system_creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_metadataproviders', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherIdentifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('notation', models.CharField(max_length=512)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
                ('description', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"description", "fi": "kuvaus"}')),
                ('outcome_description', django.contrib.postgres.fields.hstore.HStoreField(blank=True, help_text='example: {"en":"successfully collected",}', null=True)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProvenanceVariable',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(blank=True, help_text='example: {"en":"title", "fi":"otsikko"}', null=True)),
                ('representation', models.URLField(blank=True, null=True)),
                ('pref_label', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('description', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('in_scheme', models.URLField(blank=True, max_length=255, null=True)),
                ('provenance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='core.provenance')),
                ('system_creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_provenancevariables', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Spatial',
            fields=[
                ('location_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='refdata.location')),
                ('full_address', models.CharField(blank=True, max_length=512, null=True)),
                ('geographic_name', models.CharField(blank=True, max_length=512, null=True)),
            ],
            bases=('refdata.location',),
        ),
        migrations.CreateModel(
            name='Temporal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='License',
        ),
        migrations.CreateModel(
            name='EventOutcome',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.eventoutcome'),
        ),
        migrations.CreateModel(
            name='IdentifierType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.identifiertype'),
        ),
        migrations.CreateModel(
            name='LifecycleEvent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.lifecycleevent'),
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='other_identifiers',
        ),
        migrations.RemoveField(
            model_name='historicaldataset',
            name='other_identifiers',
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='actors.actor'),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='preservation_identifier',
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='files',
            field=models.ManyToManyField(related_name='datasets', to='core.File'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='last_cumulative_addition',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='preservation_state',
            field=models.IntegerField(choices=[(0, 'Initialized'), (10, 'Proposed'), (20, 'Technical Metadata Generated'), (30, 'Technical Metadata Generated Failed'), (40, 'Invalid Metadata'), (50, 'Metadata Validation Failed'), (60, 'Validated Metadata Updated'), (65, 'Validating Metadata'), (70, 'Valid Metadata'), (75, 'Metadata Confirmed'), (80, 'Accepted To Pas'), (90, 'In Packaging Service'), (100, 'Packaging Failed'), (110, 'Sip In Ingestion'), (120, 'In Pas'), (130, 'Rejected From Pas'), (140, 'In Dissemination')], default=0, help_text='Record state in PAS.'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='publisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dataset_publisher', to='core.datasetpublisher'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='state',
            field=models.CharField(choices=[('published', 'Published'), ('draft', 'Draft')], default='draft', max_length=10),
        ),
        migrations.AddField(
            model_name='file',
            name='v2_identifier',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='historicalcatalogrecord',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='actors.actor'),
        ),
        migrations.AddField(
            model_name='historicalcatalogrecord',
            name='preservation_identifier',
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='last_cumulative_addition',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='actors.actor'),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='preservation_identifier',
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='preservation_state',
            field=models.IntegerField(choices=[(0, 'Initialized'), (10, 'Proposed'), (20, 'Technical Metadata Generated'), (30, 'Technical Metadata Generated Failed'), (40, 'Invalid Metadata'), (50, 'Metadata Validation Failed'), (60, 'Validated Metadata Updated'), (65, 'Validating Metadata'), (70, 'Valid Metadata'), (75, 'Metadata Confirmed'), (80, 'Accepted To Pas'), (90, 'In Packaging Service'), (100, 'Packaging Failed'), (110, 'Sip In Ingestion'), (120, 'In Pas'), (130, 'Rejected From Pas'), (140, 'In Dissemination')], default=0, help_text='Record state in PAS.'),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='publisher',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.datasetpublisher'),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='state',
            field=models.CharField(choices=[('published', 'Published'), ('draft', 'Draft')], default='draft', max_length=10),
        ),
        migrations.AddField(
            model_name='historicalfile',
            name='v2_identifier',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='accessrights',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_accessrightss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='cataloghomepage',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_cataloghomepages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='catalogrecord',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_catalogrecords', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='contract',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_contracts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='datacatalog',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_datacatalogs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='datasetpublisher',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_datasetpublishers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='datastorage',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_datastorages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='distribution',
            name='access_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='distribution',
            name='checksum',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='distribution',
            name='download_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='distribution',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_distributions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='file',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicalaccessrights',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicalcataloghomepage',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicalcatalogrecord',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicalcontract',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicaldatacatalog',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicaldataset',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicaldatasetpublisher',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicaldatastorage',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicaldistribution',
            name='access_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaldistribution',
            name='checksum',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaldistribution',
            name='download_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaldistribution',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='historicalfile',
            name='system_creator',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('license_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='refdata.license')),
                ('description', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
            ],
            bases=('refdata.license',),
        ),
        migrations.AddField(
            model_name='temporal',
            name='dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temporal', to='core.dataset'),
        ),
        migrations.AddField(
            model_name='temporal',
            name='provenance',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temporal', to='core.provenance'),
        ),
        migrations.AddField(
            model_name='temporal',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_temporals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='spatial',
            name='dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spatial', to='core.dataset'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provenance', to='core.dataset'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='event_outcome',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.eventoutcome'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='is_associated_with',
            field=models.ManyToManyField(related_name='provenance', to='core.DatasetActor'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='lifecycle_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.lifecycleevent'),
        ),
        migrations.AddField(
            model_name='provenance',
            name='spatial',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.spatial', unique=True),
        ),
        migrations.AddField(
            model_name='provenance',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_provenances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='otheridentifier',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_identifiers', to='core.dataset'),
        ),
        migrations.AddField(
            model_name='otheridentifier',
            name='identifier_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_identifiers', to='core.identifiertype'),
        ),
        migrations.AddField(
            model_name='otheridentifier',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_otheridentifiers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datasetproject',
            name='dataset',
            field=models.ManyToManyField(related_name='is_output_of', to='core.Dataset'),
        ),
        migrations.AddField(
            model_name='datasetproject',
            name='funder_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='refdata.fundertype'),
        ),
        migrations.AddField(
            model_name='datasetproject',
            name='funding_agency',
            field=models.ManyToManyField(related_name='is_funding', to='actors.Organization'),
        ),
        migrations.AddField(
            model_name='datasetproject',
            name='participating_organization',
            field=models.ManyToManyField(related_name='participating_in', to='actors.Organization'),
        ),
        migrations.AddField(
            model_name='datasetproject',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_datasetprojects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datasetactor',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actors', to='core.dataset'),
        ),
        migrations.AddField(
            model_name='accessrightsrestrictiongrounds',
            name='access_rights',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restriction_grounds', to='core.accessrights'),
        ),
        migrations.AddField(
            model_name='accessrightsrestrictiongrounds',
            name='system_creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_accessrightsrestrictiongroundss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='metadata_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metadata_owner', to='core.metadataprovider'),
        ),
        migrations.AddField(
            model_name='historicalcatalogrecord',
            name='metadata_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.metadataprovider'),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='metadata_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.metadataprovider'),
        ),
        migrations.AlterField(
            model_name='file',
            name='checksum',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.checksum'),
        ),
        migrations.AlterField(
            model_name='historicalfile',
            name='checksum',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.checksum'),
        ),
        migrations.AlterField(
            model_name='AccessRights',
            name='license',
            field=models.ManyToManyField(related_name='access_rights', to='core.License'),
        ),
        migrations.AlterField(
            model_name='Distribution',
            name='license',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distributions', to='core.license'),
        ),
    ]
