# Generated by Django 3.2.22 on 2023-11-10 09:01

import apps.common.copier
from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0005_auto_20231103_1312'),
    ]

    operations = [
        migrations.CreateModel(
            name='Preservation',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('removed', models.DateTimeField(blank=True, editable=False, null=True)),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=256, primary_key=True, serialize=False)),
                ('state', models.IntegerField(choices=[(-1, 'None'), (0, 'Initialized'), (10, 'Generating Technical Metadata'), (20, 'Technical Metadata Generated'), (30, 'Technical Metadata Generated Failed'), (40, 'Invalid Metadata'), (50, 'Metadata Validation Failed'), (60, 'Validated Metadata Updated'), (65, 'Validating Metadata'), (70, 'Rejected By User'), (75, 'Metadata Confirmed'), (80, 'Accepted To Pas'), (90, 'In Packaging Service'), (100, 'Packaging Failed'), (110, 'Sip In Ingestion'), (120, 'In Pas'), (130, 'Rejected From Pas'), (140, 'In Dissemination')], default=-1, help_text='Record state in DPRES.')),
                ('description', django.contrib.postgres.fields.hstore.HStoreField(blank=True, help_text='Description for the preservation state. This can be an error message or a human readable summary of the last preservation action.\n\nExample: {"en": "Packaging failed", "fi": "Paketointi ep√§onnistui"}', null=True)),
                ('reason_description', models.TextField(blank=True, default='', help_text='User-provided reason for rejecting or accepting a dataset in DPRES')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preservation_entries', to='core.contract')),
                ('dataset_version', models.OneToOneField(help_text='Link between the dataset stored in DPRES and the originating dataset', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dataset_origin_version', to='core.preservation')),
                ('system_creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_preservations', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='preservation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='record', to='core.preservation'),
        ),
        migrations.AddField(
            model_name='historicalcatalogrecord',
            name='preservation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.preservation'),
        ),
        migrations.AddField(
            model_name='historicaldataset',
            name='preservation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.preservation'),
        ),
        migrations.AddConstraint(
            model_name='preservation',
            constraint=models.CheckConstraint(check=models.Q(('state__lt', 0), ('contract_id__isnull', False), _connector='OR'), name='core_preservation_has_valid_contract'),
        ),
    ]
