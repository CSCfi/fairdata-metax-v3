# Generated by Django 3.2.12 on 2022-06-21 13:26

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRight',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"description", "fi":"kuvaus"}')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessType',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogHomePage',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetLanguage',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetLicense',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataStorage',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(help_text='A unique id of the data storage', max_length=255, primary_key=True, serialize=False)),
                ('endpoint_url', models.URLField(help_text='The root location or primary endpoint of the service (a Web-resolvable IRI).')),
                ('endpoint_description', models.TextField(help_text='A description of the services available via the end-points, including their operations, parameters etc.')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('byte_size', models.BigIntegerField(default=0)),
                ('checksum', models.TextField()),
                ('date_frozen', models.DateTimeField(blank=True, null=True)),
                ('file_format', models.CharField(max_length=200, null=True)),
                ('file_name', models.TextField()),
                ('file_path', models.TextField()),
                ('date_uploaded', models.DateTimeField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_identifier', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetPublisher',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en": "name", "fi":"nimi"}')),
                ('homepage', models.ManyToManyField(related_name='publishers', to='core.CatalogHomePage')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataCatalog',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(help_text='A unique id of the resource being described or cataloged.', max_length=255, primary_key=True, serialize=False)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
                ('dataset_versioning_enabled', models.BooleanField(default=False)),
                ('harvested', models.BooleanField(default=False)),
                ('research_dataset_schema', models.CharField(choices=[('ida', 'IDA Schema'), ('att', 'ATT Schema'), ('drf', 'DRF Schema')], default='ida', max_length=6)),
                ('access_rights', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalogs', to='core.accessright')),
                ('language', models.ManyToManyField(related_name='catalogs', to='core.DatasetLanguage')),
                ('publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalogs', to='core.datasetpublisher')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogRecord',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_catalog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='records', to='core.datacatalog')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='accessright',
            name='access_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='access_rights', to='core.accesstype'),
        ),
        migrations.AddField(
            model_name='accessright',
            name='license',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='access_rights', to='core.datasetlicense'),
        ),
        migrations.CreateModel(
            name='ResearchDataset',
            fields=[
                ('catalogrecord_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.catalogrecord')),
                ('url', models.URLField(help_text='valid url to the property definition', max_length=512)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
                ('persistent_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('keyword', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('other_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('is_deprecated', models.BooleanField(default=False)),
                ('cumulation_started', models.DateTimeField(blank=True, null=True)),
                ('cumulation_ended', models.DateTimeField(blank=True, null=True)),
                ('access_right', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='research_datasets', to='core.accessright')),
                ('first', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_version', to='core.researchdataset')),
                ('language', models.ManyToManyField(related_name='research_datasets', to='core.DatasetLanguage')),
                ('last', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_version', to='core.researchdataset')),
                ('previous', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='core.researchdataset')),
                ('replaces', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replaced_by', to='core.researchdataset')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.catalogrecord', models.Model),
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('id', models.CharField(help_text='A specific representation of a dataset.', max_length=255, primary_key=True, serialize=False)),
                ('title', django.contrib.postgres.fields.hstore.HStoreField(help_text='example: {"en":"title", "fi":"otsikko"}')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('access_url', models.URLField()),
                ('download_url', models.URLField()),
                ('byte_size', models.BigIntegerField(default=0)),
                ('checksum', models.TextField()),
                ('access_rights', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distributions', to='core.accessright')),
                ('access_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distributions', to='core.datastorage')),
                ('files', models.ManyToManyField(related_query_name='distributions', to='core.File')),
                ('license', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distributions', to='core.datasetlicense')),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distributions', to='core.researchdataset')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
