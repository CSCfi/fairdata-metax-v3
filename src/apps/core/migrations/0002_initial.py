# Generated by Django 4.2.11 on 2024-03-19 09:32

import apps.core.models.concepts
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('refdata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.accesstype'),
        ),
        migrations.CreateModel(
            name='EventOutcome',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.eventoutcome'),
        ),
        migrations.CreateModel(
            name='FieldOfScience',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.fieldofscience'),
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.filetype'),
        ),
        migrations.CreateModel(
            name='FunderType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.fundertype'),
        ),
        migrations.CreateModel(
            name='IdentifierType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.identifiertype'),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.language'),
        ),
        migrations.CreateModel(
            name='License',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.license'),
        ),
        migrations.CreateModel(
            name='LifecycleEvent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.lifecycleevent'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.location'),
        ),
        migrations.CreateModel(
            name='PreservationEvent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.preservationevent'),
        ),
        migrations.CreateModel(
            name='RelationType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.relationtype'),
        ),
        migrations.CreateModel(
            name='ResearchInfra',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.researchinfra'),
        ),
        migrations.CreateModel(
            name='ResourceType',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.resourcetype'),
        ),
        migrations.CreateModel(
            name='RestrictionGrounds',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.restrictiongrounds'),
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.theme'),
        ),
        migrations.CreateModel(
            name='UseCategory',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(apps.core.models.concepts.ConceptProxyMixin, 'refdata.usecategory'),
        ),
        migrations.CreateModel(
            name='LegacyDataset',
            fields=[
                ('dataset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.dataset')),
                ('dataset_json', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('contract_json', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('files_json', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('v2_dataset_compatibility_diff', models.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='Difference between v1-v2 and V3 dataset json', null=True)),
            ],
            options={
                'ordering': ['created', 'id'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=('core.dataset',),
        ),
    ]
