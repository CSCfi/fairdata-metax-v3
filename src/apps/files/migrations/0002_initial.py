# Generated by Django 4.2.11 on 2024-03-19 09:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='filestorage',
            name='system_creator',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='files.filestorage'),
        ),
        migrations.AddField(
            model_name='file',
            name='system_creator',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BasicFileStorage',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('files.filestorage',),
        ),
        migrations.CreateModel(
            name='ProjectFileStorage',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('files.filestorage',),
        ),
        migrations.AlterUniqueTogether(
            name='filestorage',
            unique_together={('csc_project', 'storage_service')},
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['directory_path', 'storage'], name='files_file_directo_dfe580_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['directory_path', 'filename'], name='files_file_directo_51da0a_idx'),
        ),
        migrations.AddConstraint(
            model_name='file',
            constraint=models.CheckConstraint(check=models.Q(('filename', ''), _negated=True), name='files_file_require_filename'),
        ),
        migrations.AddConstraint(
            model_name='file',
            constraint=models.CheckConstraint(check=models.Q(('directory_path__startswith', '/'), ('directory_path__endswith', '/')), name='files_file_require_dir_slash'),
        ),
        migrations.AddConstraint(
            model_name='file',
            constraint=models.UniqueConstraint(condition=models.Q(('is_removed', False)), fields=('filename', 'directory_path', 'storage'), name=',files_file_unique_file_path'),
        ),
        migrations.AddConstraint(
            model_name='file',
            constraint=models.UniqueConstraint(condition=models.Q(('is_removed', False), ('storage_identifier__isnull', False)), fields=('storage_identifier', 'storage'), name='files_file_unique_identifier'),
        ),
        migrations.CreateModel(
            name='IDAFileStorage',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('files.projectfilestorage',),
        ),
    ]
