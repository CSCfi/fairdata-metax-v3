# Generated by Django 4.2.11 on 2024-04-09 06:27

from django.db import migrations
from urllib.parse import quote

from django.conf import settings

def merge_organizations(org, others: list):
    """Merge organizations with org.

    - Update relations that reference an org in `others` to point to `org`
    - Delete orgs in `others`
    """
    org_model = org.__class__
    # Get relations that point to Organization
    relations = [rel for rel in org_model._meta.get_fields() if rel.is_relation and not rel.concrete]

    for other_org in others:
        for rel in relations:
            field = rel.field
            if field.many_to_one:
                # Update `field = ForeignKey(Organization)`
                query = {field.name: other_org.id}
                new_value = {field.name: org.id}
                field.model.objects.filter(**query).update(**new_value)
            elif field.many_to_many:
                # Update `field = ManyToManyField(Organization)`
                to_field = field.m2m_reverse_field_name()
                query = {to_field: other_org.id}
                new_value = {to_field: org.id}
                rel.through.objects.filter(**query).update(**new_value)
        other_org.delete() # hard delete


def encode_org_url_code(apps, schema_editor):
    """Quote organization code to make sure the resulting URL is valid."""
    org_model = apps.get_model("actors", "Organization")

    for org in org_model.objects.filter(is_reference_data=True, code__isnull=False):
        new_url = f"{settings.ORGANIZATION_BASE_URI}{quote(org.code)}"
        if org.url != new_url:
            # URL needs to be updated. If there is an existing organization
            # with the same URL (from a V2 migration), merge it with current organization.
            merge_organizations(org, org_model.objects.filter(is_reference_data=True, url=new_url))
            org.url = new_url
            org.save()

class Migration(migrations.Migration):

    dependencies = [
        ('actors', '0003_person_homepage'),
    ]

    operations = [
        migrations.RunPython(encode_org_url_code, migrations.RunPython.noop)
    ]

